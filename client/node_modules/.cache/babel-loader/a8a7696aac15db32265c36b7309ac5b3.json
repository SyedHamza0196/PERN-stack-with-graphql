{"ast":null,"code":"var _jsxFileName = \"/home/macho/Desktop/new_heroku/client/src/Components/AddBook.js\";\nimport React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { addBookMutation, getBooksQuery } from \"../queries/queries\";\n\nfunction AddBook() {\n  const [addBook, {\n    data\n  }] = useMutation(addBookMutation);\n  const [name, setname] = useState(\"\");\n  const [genre, setgenre] = useState(\"\");\n  const [authorId, setauthorId] = useState(\"\");\n\n  const formSubmit = e => {\n    e.preventDefault();\n    addBook({\n      variables: {\n        name: name,\n        genre: genre,\n        authorId: authorId\n      },\n      refetchQueries: [{\n        query: getBooksQuery\n      }]\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    id: \"add-book\",\n    onSubmit: formSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }\n  }, \"Book name: \"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: name,\n    onChange: e => {\n      setname(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  }, \"Genre: \"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: genre,\n    onChange: e => {\n      setgenre(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }, \"Author: \"), /*#__PURE__*/React.createElement(\"select\", {\n    value: authorId,\n    onChange: e => {\n      setauthorId(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 21\n    }\n  }, \"Select Author\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 21\n    }\n  }, \"a1\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }\n  }, \"a2\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 21\n    }\n  }, \"a3\"))), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, \"+\"));\n}\n\nexport default AddBook;","map":{"version":3,"sources":["/home/macho/Desktop/new_heroku/client/src/Components/AddBook.js"],"names":["React","useState","useMutation","addBookMutation","getBooksQuery","AddBook","addBook","data","name","setname","genre","setgenre","authorId","setauthorId","formSubmit","e","preventDefault","variables","refetchQueries","query","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useMutation } from '@apollo/client'\nimport { addBookMutation, getBooksQuery } from \"../queries/queries\"\n\n\nfunction AddBook() {\n    const [addBook, { data }] = useMutation(addBookMutation)\n\n    const [name, setname] = useState(\"\");\n    const [genre, setgenre] = useState(\"\");\n    const [authorId, setauthorId] = useState(\"\");\n\n    const formSubmit = (e) => {\n        e.preventDefault();\n        addBook ({ variables:{\n            name: name,\n            genre: genre,\n            authorId: authorId\n        },\n        refetchQueries: [{query: getBooksQuery}]\n        });\n    }\n\n    return (\n        <form id=\"add-book\" onSubmit={formSubmit}>\n            <div className=\"field\">\n                <label>Book name: </label>\n                <input type=\"text\" value={name} onChange={(e)=>{setname(e.target.value)}}/>\n            </div>\n            <div className=\"field\">\n                <label>Genre: </label>\n                <input type=\"text\" value={genre} onChange={(e)=>{setgenre(e.target.value)}}/>\n            </div>\n            <div className=\"field\">\n                <label>Author: </label>\n                <select value={authorId} onChange={(e)=>{setauthorId(e.target.value)}}>\n                    <option>Select Author</option>\n                    <option value=\"1\">a1</option>\n                    <option value=\"2\">a2</option>\n                    <option value=\"3\">a3</option>\n                </select>\n            </div>\n            <button>+</button>\n        </form>\n    )\n}\n\nexport default AddBook;"]},"metadata":{},"sourceType":"module"}